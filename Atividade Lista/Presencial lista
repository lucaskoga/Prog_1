1. Implemente um programa que leia tres numeros x, y e z e ordene-os em ordem crescente. Para resolver esse problema voce deve utilizar o prot ́otipo de funcao a seguir.
 void troca ( int ∗x , int ∗y ) {

 }
 
 resposta: 
 
#include <stdio.h>
#include <stdlib.h>
void troca (int *x, int *y){
    int aux;
    aux = *x;
    *x = *y;
    *y = aux;
}
int main()
{
    int x = 6654, y = 294, z= 42, aux;
    troca(&x, &y);

    printf("\n%d %d %d", x, y, z);

    if(x > y || x > z){
        if(y < z){
            troca(&x, &y);
        }else
            troca(&x, &z);
    }
    if(y > z){
        troca(&y, &z);
    }

    printf("\nEm ordem: %d %d %d: ", x, y, z);
    return 0;
}

2. Indique quais as sa ́ıdas produzidas pelo programa a seguir. Faca a analise manual de cada instrucao e verifique os resultados. Depois, voce pode executar o 
codigo comparando os resultados.
1 #include <stdio.h>
2
3 int main () {
4 int x , y = 0 ;
5 int ∗p = &y ;
6 x = ∗p ;
7 x = 1 0;
8 (∗p )++;
9 x−−;
10 printf( "%d\n" , ∗p ) ;
11 (∗p) += x ;
12 printf( "%d\n" , y ) ;
13 printf( "%d\n" , &x == p ) ;
14 return 0 ;
15 }

Resultado: saida e 1, 3 , 0

3. Na sequencia de instrucoes abaixo: [1]
1 floatf ;
2 float ∗pf ;
3 pf = &f ;
4 scanf ("%f", pf);

(a) Temos um erro de sintaxe;
resposta certa(b) Dever ́ıamos estar usando &pf no scanf;
(c) Nao efetuamos a leitura de f;
(d) Efetuamos a leitura de f;
(e) Nenhuma das opçoes anteriores.

4) No programa a seguir queremos ler o conteudo da variavel x usando o ponteiro p. Analise o codigo
manualmente e verifique se ele funciona corretamente. No caso de nao funcionar, indique qual  ́e o
problema e corrija-o de modo a produzir o resultado pretendido.

Resposta: o programa ao meu ver apresenta erro, pois na entra de um valor quando entramos com o scanf precisamos passar quale o ponteiro,
não passando a variavel que e o ponteiro.
codigo funcional:
 #include <stdio.h>

int main () {
    int x;
    int *p = &x;

    scanf("%d", p);
    printf("%d", x);

 return 0 ;
 }

5. Analise a sequencia de instrucoes a seguir:
1 int x = 5 , y = 1 0;
2 int ∗p1 = &x ;
3 int ∗p2 = &y ;

a)- Expressao invalida pois esta fazendo uma variavel receber uma comparacao de 2 possiao 
b)- Expressao valida pois ele esta somando ambos os possiao.
c)- Expressao invalida pois esta subtraindo 1 ponteiro em vez da possisao que esse ponteiro esta apontando
d)- Expressao valida pois ele esta encrementando o bits deste ponteiro
e)- Expressao invalida pois ele esta fazendo uma comparacao entre dois ponteiro e guarda em uma variavel 

8. Implemente um programa usando ponteiro que leia um array (matriz) 3 X 3 de n ́umeros inteiros.
Depois, leia um n ́umero x e verifique quantas vezes x aparece no array.
Resposta:
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int mat[3][3] = {3, 4, 6,
                     7, 4, 3,
                     9, 5, 2};


    int i = 3;
    int *p = &i;
    int count = 0;
    for(int x = 0; x < 3; x++){
        for(int y = 0; y < 3; y++){
            if(*p == mat[x][y]){
                count++;
            }
        }
    }
    printf("Vezes que %d: aparece eh: %d vezes", i, count);
    return 0;
}

